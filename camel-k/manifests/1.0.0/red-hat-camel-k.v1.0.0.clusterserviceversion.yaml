# ---------------------------------------------------------------------------
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ---------------------------------------------------------------------------

apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [{
        "apiVersion": "camel.apache.org/v1",
        "kind": "IntegrationPlatform",
        "metadata": {
          "name": "example"
        },
        "spec": {}
      },
      {
        "apiVersion": "camel.apache.org/v1",
        "kind": "Integration",
        "metadata": {
          "name": "example"
        },
        "spec": {
          "sources": [
            {
              "content": "from('timer:groovy?period=1s')\n  .setBody().simple('Hello world from Camel K!')\n  .to('log:info?showAll=false')",
              "name": "example.groovy"
            }
          ]
        }
      },
      {
        "apiVersion": "camel.apache.org/v1",
        "kind": "IntegrationKit",
        "metadata": {
          "name": "example"
        },
        "spec": {}
      },
      {
        "apiVersion": "camel.apache.org/v1",
        "kind": "CamelCatalog",
        "metadata": {
          "name": "example"
        },
        "spec": {}
      },
      {
        "apiVersion": "camel.apache.org/v1",
        "kind": "Build",
        "metadata": {
          "name": "example"
        },
        "spec": {}
      }]
    capabilities: Basic Install
    categories: Integration & Delivery
    certified: "false"
    containerImage: docker.io/apache/camel-k:1.0.0-RC2
    createdAt: "2020-03-09T02:45:00Z"
    description: Apache Camel K provided by Red Hat is a lightweight integration platform, born on Kubernetes,
      with serverless superpowers.
    repository: https://github.com/apache/camel-k
    support: Camel
  name: red-hat-camel-k-operator.v1.0.0
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: A Camel K build
      displayName: Build
      kind: Build
      name: builds.camel.apache.org
      version: v1
    - description: A Camel catalog
      displayName: Camel Catalog
      kind: CamelCatalog
      name: camelcatalogs.camel.apache.org
      version: v1
    - description: A Camel K integration
      displayName: Integration
      kind: Integration
      name: integrations.camel.apache.org
      version: v1
    - description: A Camel K integration kit
      displayName: Integration Kit
      kind: IntegrationKit
      name: integrationkits.camel.apache.org
      version: v1
    - description: A Camel K integration platform
      displayName: Integration Platform
      kind: IntegrationPlatform
      name: integrationplatforms.camel.apache.org
      version: v1
  description: |
    Apache Camel K provided by Red Hat
    ==============

    Apache Camel K provided by Red Hat is a lightweight integration platform, born on Kubernetes, with serverless superpowers.

    ## Installation

    To start using Camel K, install the operator and then create the following `IntegrationPlatform`:
    ```
    apiVersion: camel.apache.org/v1
    kind: IntegrationPlatform
    metadata:
      name: camel-k
      labels:
        app: "camel-k"
    ```

    ## Running an Integration

    After the initial setup, you can run a Camel integration on the cluster by creating an example `Integration`:
    ```
    apiVersion: camel.apache.org/v1
    kind: Integration
    metadata:
      name: example
    spec:
      sources:
      - content: |
          import org.apache.camel.builder.RouteBuilder;

          public class Example extends RouteBuilder {
              @Override
              public void configure() throws Exception {
                  from("timer:tick")
                      .setBody(constant("Hello World!"))
                  .to("log:info?skipBodyLineSeparator=false");
              }
          }
      name: Example.java
    ```
  displayName: Camel K by Red Hat Operator
  icon:
  - base64data: PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAxMDAgMTAwIj48ZGVmcz48c3R5bGU+LmNscy0xe2ZpbGw6I2Q3MWUwMDt9LmNscy0ye2ZpbGw6I2MyMWEwMDt9LmNscy0ze2ZpbGw6I2ZmZjt9LmNscy00e2ZpbGw6I2VhZWFlYTt9PC9zdHlsZT48L2RlZnM+PHRpdGxlPkxvZ288L3RpdGxlPjxnIGlkPSJMYXllcl8xIiBkYXRhLW5hbWU9IkxheWVyIDEiPjxjaXJjbGUgY2xhc3M9ImNscy0xIiBjeD0iNTAiIGN5PSI1MCIgcj0iNTAiIHRyYW5zZm9ybT0idHJhbnNsYXRlKC0yMC43MSA1MCkgcm90YXRlKC00NSkiLz48cGF0aCBjbGFzcz0iY2xzLTIiIGQ9Ik04NS4zNiwxNC42NEE1MCw1MCwwLDAsMSwxNC42NCw4NS4zNloiLz48cGF0aCBkPSJNMzEsMzEuMzZhMS45NCwxLjk0LDAsMCwxLTMuNjItLjg5LjQzLjQzLDAsMCwxLC41My0uNDQsMy4zMiwzLjMyLDAsMCwwLDIuODEuN0EuNDMuNDMsMCwwLDEsMzEsMzEuMzZaIi8+PHBhdGggY2xhc3M9ImNscy0zIiBkPSJNNzcuNjMsNDQuNzZDNzcuMTIsNDEuMzQsNzMsMjEsNjYuMzIsMjFjLTIuNDQsMC00LjU5LDMuMzUtNiw2Ljg4LS40NCwxLjA2LTEuMjMsMS4wOC0xLjYzLDBDNTcuMjQsMjQuMTYsNTUuODgsMjEsNTMuMjgsMjEsNDMuMzQsMjEsNDcuODQsNDUuMTgsMzksNDUuMThjLTQuNTcsMC01LjM3LTEwLjU5LTUuNS0xNC43MiwyLjE5LjY1LDMuMy0xLDMuNTUtMi42MWEuNjMuNjMsMCwwLDAtLjQ4LS43MiwzLjM2LDMuMzYsMCwwLDAtMywuODlIMjcuMzFhMSwxLDAsMCwwLS42OC4yOGwtLjUzLjUzSDIyLjIxYS41NC41NCwwLDAsMC0uMzguMTZsLTMuOTUsMy45NWEuNTQuNTQsMCwwLDAsLjM4LjkxaC4zNmwwLDBIMjkuNzFjLjYsNi4yNiwxLjc1LDIyLDE2LjQyLDE3LjE5bC0uMzIsNUw0NC4zNyw3OC40NmExLDEsMCwwLDAsMSwxaDQuOWExLDEsMCwwLDAsMS0xbC0uNjEtMjMuMzMtLjE1LTUuODFjNi0yLjc4LDktNS42NiwxNi4xOS02Ljc1LTEuNTksMi42Mi0yLjA1LDYuODctMi4wNiw4LS4wNiw2LDIuNTUsOC43NCw1LDEzLjIyTDYzLjczLDc4YTEsMSwwLDAsMCwuODksMS4zMmg0LjY0YTEsMSwwLDAsMCwuOTMtLjc0TDc0LDYyLjZjLTQuODMtNy40MywxLjgzLTE1LjMxLDMuNDEtMTdBMSwxLDAsMCwwLDc3LjYzLDQ0Ljc2Wk0zMSwzMS4zNmExLjk0LDEuOTQsMCwwLDEtMy42Mi0uODkuNDMuNDMsMCwwLDEsLjUzLS40NCwzLjMyLDMuMzIsMCwwLDAsMi44MS43QS40My40MywwLDAsMSwzMSwzMS4zNloiLz48cGF0aCBjbGFzcz0iY2xzLTQiIGQ9Ik00Ni4xMyw1MS4wN0MzMS40Niw1NS45MiwzMC4zMSw0MC4xNCwyOS43MSwzMy44OEgxOC42NUwyMC43NSwzNmExLDEsMCwwLDAsLjY4LjI4aDZjMCw1LjgsMS4xMywyMC4yLDE0LDIwLjJhMzEuMzQsMzEuMzQsMCwwLDAsNC40Mi0uMzVaIi8+PHBhdGggY2xhc3M9ImNscy00IiBkPSJNNTAuNDEsNDkuMzZsLjE1LDUuODFhMTA4LjIsMTA4LjIsMCwwLDAsMTQtNC41NCwxOS43OSwxOS43OSwwLDAsMSwyLjA2LThDNTkuNDYsNDMuNyw1Ni40NCw0Ni41OCw1MC40MSw0OS4zNloiLz48L2c+PC9zdmc+
    mediatype: image/svg+xml
  install:
    spec:
      deployments:
      - name: camel-k-operator
        spec:
          replicas: 1
          selector:
            matchLabels:
              name: camel-k-operator
          strategy:
            type: Recreate
          template:
            metadata:
              labels:
                app: camel-k
                camel.apache.org/component: operator
                name: camel-k-operator
            spec:
              containers:
              - command:
                - kamel
                - operator
                env:
                - name: WATCH_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.annotations['olm.targetNamespaces']
                - name: OPERATOR_NAME
                  value: camel-k
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                image: docker.io/apache/camel-k:1.0.0-RC2
                imagePullPolicy: IfNotPresent
                name: camel-k-operator
                resources: {}
              serviceAccountName: camel-k-operator
      permissions:
      - rules:
        - apiGroups:
          - camel.apache.org
          resources:
          - '*'
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - pods
          - services
          - endpoints
          - persistentvolumeclaims
          - configmaps
          - secrets
          - serviceaccounts
          verbs:
          - create
          - delete
          - deletecollection
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - roles
          - rolebindings
          verbs:
          - create
          - delete
          - deletecollection
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
          - get
          - list
          - watch
        - apiGroups:
          - apps
          resources:
          - deployments
          - replicasets
          - statefulsets
          verbs:
          - create
          - delete
          - deletecollection
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - batch
          resources:
          - cronjobs
          verbs:
          - create
          - delete
          - deletecollection
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - apps
          resources:
          - daemonsets
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - extensions
          resources:
          - ingresses
          verbs:
          - create
          - delete
          - deletecollection
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          - build.openshift.io
          resources:
          - buildconfigs
          - buildconfigs/webhooks
          - builds
          verbs:
          - create
          - delete
          - deletecollection
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          - image.openshift.io
          resources:
          - imagestreamimages
          - imagestreammappings
          - imagestreams
          - imagestreams/secrets
          - imagestreamtags
          verbs:
          - create
          - delete
          - deletecollection
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          - build.openshift.io
          resources:
          - buildconfigs/instantiate
          - buildconfigs/instantiatebinary
          - builds/clone
          verbs:
          - create
        - apiGroups:
          - ""
          - route.openshift.io
          resources:
          - routes
          verbs:
          - create
          - delete
          - deletecollection
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          - route.openshift.io
          resources:
          - routes/custom-host
          verbs:
          - create
        - apiGroups:
          - serving.knative.dev
          resources:
          - services
          verbs:
          - create
          - delete
          - deletecollection
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - eventing.knative.dev
          - messaging.knative.dev
          resources:
          - '*'
          verbs:
          - create
          - delete
          - deletecollection
          - get
          - list
          - patch
          - update
          - watch
        serviceAccountName: camel-k-operator
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - apache
  - kamel
  - kubernetes
  - serverless
  - microservices
  labels:
    name: camel-k-operator
  links:
  - name: Apache Camel K source code repository
    url: https://github.com/apache/camel-k
  maintainers:
  - name: Jon Anstey
    email: janstey@redhat.com
  provider:
    name: Red Hat
  maturity: alpha
  minKubeVersion: 1.14.0
  selector:
    matchLabels:
      name: camel-k-operator
  version: 1.0.0
